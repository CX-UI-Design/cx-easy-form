@import "../../../assets/public";
@import "../../../assets/mixin/mixin";

$baseEdge: 10px; //base edge
$adjust: 4px; //base gap to adjust
$formErrFs: 12px; //font size in error message

//aftr border normal
@mixin pseudoClass {
  border-top: 0.4rem solid $--color-danger;
  border-left: 0.4rem solid transparent;
  border-right: 0.4rem solid transparent;
}

//aftr border init
@mixin pseudoClass_init {
  border: none;
}

//form - package border-color toggle
@mixin border-color-Toggle($border-color) {
  .el-input__inner, .el-textarea__inner {
    border-color: $border-color;
    @include transition(all, 300ms, ease-in);
  }
}

//normal icon toggle
@mixin normal-Icon-Toggle($state) {
  .cx-input__icon {
    &.normal {
      display: $state;
    }
  }
}

//success / error icon toggle
@mixin validate-icon-Toggle($type,$succeState,$errState) {
  .cx-input__icon {
    @if $type == 'cue-all' {
      &.success {
        display: $succeState;
      }
      &.error {
        display: $errState;
      }
    } @else if $type == 'cue-only-error' {
      &.success {
        display: $succeState;
      }
      &.error {
        display: $errState;
      }
    } @else if $type == 'cue-only-error-hover' {
      &.success {
        display: $succeState;
      }
      &.error {
        display: $errState;
      }
    }
    else {
      display: none;
    }
  }
}

//验证提示显示改变
@mixin validate-Cue-Change($cueType,$state) {
  //表单验证提示类型一：包含错误错误和正确的展现
  @if $cueType == 'cue-all' {
    //验证错误
    @if $state == 'error' {
      @include border-color-Toggle($--color-danger); //切换为红色边框
      @include validate-icon-Toggle($cueType, none, block); //切换验证图标，错误显示，正确隐藏
    }
      //非错误情况（处于验证激活状态，且验证正确，这种情况需要区别于表单加载后的初始状态（验证未激活））
    @else {
      @include border-color-Toggle($--color-success); //切换为绿色边框
      @include normal-Icon-Toggle(none); //常规自带图标隐藏
      @include validate-icon-Toggle($cueType, block, none); //切换验证图标，错误隐藏，正确显示
    }
  }
    //表单验证提示类型二（只有错误的展现）
  @else if $cueType == 'cue-only-error' {
    @include border-color-Toggle($--color-text-placeholder); //切换默认边框颜色
    @if $state == 'error' {
      @include border-color-Toggle($--color-danger); //切换为红色边框
      @include validate-icon-Toggle($cueType, none, block); //切换验证图标，错误显示，正确隐藏
    } @else {
      @include normal-Icon-Toggle(none); //常规自带图标隐藏
    }
  }
    //表单验证提示类型三（只有错误的展现，且鼠标移入展现错误提示）
  @else if $cueType == 'cue-only-error-hover' {
    @include border-color-Toggle($--color-text-placeholder); //切换默认边框颜色
    @if $state == 'error' {
      @include border-color-Toggle($--color-danger); //切换为红色边框
      @include validate-icon-Toggle($cueType, none, block); //切换验证图标，错误显示，正确隐藏
    } @else {
      @include normal-Icon-Toggle(none); //常规自带图标隐藏
    }
  }

}

//鼠标操作控制显隐（作用引用对象）
@mixin cue-Modular-hover($initState,$hoverState) {
  .el-form-item__error {
    @include transition(all, 300ms, ease-in);
    visibility: $initState;
    &:before {
      visibility: $initState;
    }
  }
  &:hover {
    .el-form-item__error {
      @include transition(all, 300ms, ease-in);
      visibility: $hoverState;
      &:before {
        visibility: $hoverState;
      }
    }
  }
}

//表单内item 模块
.cx-auto-form{
  .cx-auto-form-container {
    .el-form-item.cx-muster-item {

      //非错误情况下中非基础表单控件错误信息的情况下，不显示错误信息
      &:not(.is-error) {
        .el-form-item__error:not(.base-formtable__error) {
          display: none;
        }
      }
      //必填
      &.is-required {
        .cx-required {
          label.cx-label:before {
            content: '*';
            color: $--color-danger;
            margin-right: 4px;
          }
        }
        .cx-notRequired {
          .el-input__inner {
            border-color: $--border-color-light !important;
          }
          .cx-input__icon {
            display: none !important;
          }
        }
      }

      //cueType表单验证提示展现类型 非 'normal' 情况
      &:not(.cue-normal) {

        //自定义表单验证出错
        .cx-simple-item {
          position: relative;
          &.cx-is-error {
            .el-input__inner, .el-textarea__inner {
              border-color: #FF6600;
              @include transition(all, 300ms, linear);
            }
            .el-form-item__error {
              visibility: visible;
              height: $formErrFs * 2+$adjust;
              @include transition(all, 250ms, linear);
              &:before {
                @include pseudoClass;
                @include transition(all, 350ms, ease-in);
              }
            }
          }
          .el-form-item__error {
            height: 0;
            visibility: hidden;
            &:before {
              @include pseudoClass_init;
            }
          }
        }
        //检验错误 提示（展示样式修改）
        .el-form-item__error {
          position: absolute;
          height: $formErrFs * 2+$adjust;
          line-height: $formErrFs * 2 - $adjust;
          font-size: $formErrFs;
          top: -($formErrFs * 2 - $adjust);
          left: ($formErrFs * 2 - $adjust) / 2;
          color: $--color-white;
          background: $--color-danger;
          padding-top: $adjust;
          padding-left: $baseEdge;
          padding-right: $baseEdge;
          @include border-radius($adjust/2);
          @include box-sizing;
          &:before {
            content: '';
            position: absolute;
            top: $formErrFs * 2 +  $adjust;
            left: $baseEdge;
            width: 0;
            height: 0;
            border-top: 0.4rem solid $--color-danger;
            border-left: 0.4rem solid transparent;
            border-right: 0.4rem solid transparent;
          }
        }

        //表单验证提示类型一：包含错误错误和正确的展现
        &.cue-all {
          // 基于element-ui验证，验证激活状态
          &.validating {
            @include validate-Cue-Change('cue-all', 'success'); //验证提示显示改变
            // 验证错误状态
            &.is-error {
              @include validate-Cue-Change('cue-all', 'error');
            }
          }
          //自定义验证，验证激活状态
          .validating {
            @include validate-Cue-Change('cue-all', 'success'); //验证提示显示改变
            // 验证错误状态
            &.cx-is-error {
              @include validate-Cue-Change('cue-all', 'error');
            }
          }
        }
        /*
          表单验证提示类型二（只有错误的展现）
          表单验证提示类型三（只有错误的展现，且鼠标移入展现错误提示）
         */
        &.cue-only-error, &.cue-only-error-hover {
          // 基于element-ui验证，验证激活状态
          &.validating {
            @include validate-Cue-Change('cue-only-error', 'success');
            // 验证错误状态
            &.is-error {
              @include validate-Cue-Change('cue-only-error', 'error');
            }
          }
          //自定义验证，验证激活状态
          .validating {
            @include validate-Cue-Change('cue-only-error', 'success');
            // 验证错误状态
            &.cx-is-error {
              @include validate-Cue-Change('cue-only-error', 'error');
            }
          }
        }

        //表单验证提示类型三鼠标动作，控制错误提示显隐
        &.cue-only-error-hover {
          //排除form-table 控件内的表单元素
          &:not( .ns-baseTable-item) {
            @include cue-Modular-hover(hidden, visible);
          }
          //自定义表单控件部分
          .cx-simple-item {
            &.cx-is-error {
              @include cue-Modular-hover(hidden, visible);
            }
          }
        }

      }
    }
  }
}



